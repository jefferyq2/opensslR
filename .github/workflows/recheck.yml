name: Run a recheck

on:
  push:
  pull_request:

env:
  R_LIBS_USER: ${{github.workspace}}/pkglib

jobs:
  prepare:
    name: Get package and dependencies
    runs-on: ubuntu-latest
    container: ghcr.io/r-universe-org/recheck
    steps:
      - name: prepare
        run: |
          mkdir -p $R_LIBS_USER
          R -e ".libPaths()"

      - name: clone
        run: git clone --depth=1 https://github.com/${{github.repository}} source

      - name: download dependencies
        run: recheck::install_recheck_deps('source')
        shell: Rscript {0}

      - name: build source package
        run: |
          mkdir checkdir
          R CMD build source
          mv *.tar.gz checkdir/
          rm -Rf source

      - name: Save package and library
        uses: actions/cache/save@v4
        with:
          path: |
            pkglib
            checkdir
          key: ${{ runner.os }}-${{ github.run_id }}-${{github.run_attempt}}

  checks:
    needs: prepare
    runs-on: ubuntu-latest
    container: ghcr.io/r-universe-org/recheck
    strategy:
      matrix:
        check: [ 'old', 'new' ]
    steps:
      - name: Download package and library
        uses: actions/cache/restore@v4
        with:
          path: |
            pkglib
            checkdir
          key: ${{ runner.os }}-${{ github.run_id }}-${{github.run_attempt}}

      - name: Get old version of package
        if: matrix.check == 'old'
        shell: Rscript {0}
        run: |
          setwd("checkdir")
          pkg <- sub("_.*", "", list.files())
          unlink("*.tar.gz")
          download.packages(pkg, ".", repos = "https://cran.r-project.org")

      - name: Run checks
        shell: Rscript {0}
        run: |
          tools::check_packages_in_dir("checkdir",
            reverse = list(repos = 'https://cloud.r-project.org, which = "strong"),
            Ncpus = parallel::detectCores())


